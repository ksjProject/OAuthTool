
Data Controller 입력 명세 (OIDC nonce 점검 전용)
===============================================
※ 필드 이름(영문 파라미터 명)은 그대로 쓰고, 설명은 한국어로 제공.
※ "클라이언트" = RP, "인가서버" = OP 로 표기.

필수 개념(공식문서 요약):
- Authorization Request(클라이언트 → 인가서버): `response_type`, `scope`, `state`, `nonce`를 포함.
  * Implicit/Hybrid: 요청에 `nonce` **필수(REQUIRED)**.
  * Authorization Code: `nonce`는 **선택**, 그러나 **요청에 보냈다면** ID Token에 **반드시(MUST)** 포함되고 **동일성 검증(MUST)** 필요.
- ID Token(JWT): 요청에 `nonce`가 있었다면 **동일한 `nonce` Claim MUST**.
- Authorization Response: `id_token`이 URI fragment 또는 **form_post** 바디로 전달될 수 있음.
- Token Response: Code Flow에서는 여기서 `id_token`을 수신.
- Refresh(선택): Refresh로 발급된 ID Token에는 `nonce`가 일반적으로 **포함되지 않음(SHOULD NOT)**. 포함 시 최초 인증 `nonce`와 **동일(MUST)**.

캡처해야 할 패킷/필드
----------------------
1) Authorization Request  [클라이언트 → 인가서버]
   - 실제 전송된 전체 URL (`authorization_endpoint`) 예:
     https://as.example/authorize?response_type=code%20id_token&scope=openid&client_id=...&redirect_uri=...&state=S...&nonce=N...
   - 쿼리 파라미터(파싱 결과):
     `response_type`, `scope`, `client_id`, `redirect_uri`, `state`, `nonce`,
     (선택) `response_mode`, `code_challenge`, `code_challenge_method`
   - (선택) `ts` 타임스탬프 — 신선도/재사용 분석 보조

2) Authorization Response [인가서버 → 브라우저]
   - 302 Redirect인 경우: `Location` 헤더의 전체 값(쿼리/프래그먼트 포함)을 저장
   - `response_mode=form_post` 인 경우: HTML 바디를 저장하고 hidden input을 파싱
   - 관심 필드: `id_token`, `code`, `state`, (있다면) `iss`

3) Callback(브라우저 → 클라이언트)
   - 리다이렉트 도착 요청의 GET 쿼리(예: `code`, `state`) 또는 POST 바디(`id_token`, `state`)

4) Token Response (Code Flow) [클라이언트 ↔ 인가서버]
   - JSON 바디 전체: `id_token`, `access_token`, `token_type`, `expires_in`, (있다면) `refresh_token`

5) Refresh Token Response (선택) [클라이언트 ↔ 인가서버]
   - JSON 바디 전체: (있다면) `id_token` — refresh 규칙 점검에 사용

6) previous_nonces (선택)
   - 동일 사용자/세션의 과거 성공 로그인 시도에서 수집한 `nonce` 샘플 배열
     (신선도/재사용/엔트로피 분석에 사용)

전달 방법
---------
- 위 항목을 하나의 dict로 묶어 `run_checks(flow_bundle: dict)`에 전달.
- 정확한 스켈레톤은 `oidc_nonce_checker.py` 상단 docstring 참고.
